import streamlit as st
import pandas as pd
import sqlite3
import requests
import os

@st.cache_data(ttl=900)
def load_sqlite_data():
    db_path = "health_data.sqlite"
    file_id = "1HruO9AMrUfniC8hBWtumVdxLJayEc1Xr"
    gdrive_url = f"https://drive.google.com/uc?export=download&id={file_id}"

    if not os.path.exists(db_path):
        with st.spinner("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Drive..."):
            with requests.get(gdrive_url, stream=True) as r:
                if r.status_code != 200:
                    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google Drive ‡πÑ‡∏î‡πâ")
                    return pd.DataFrame()
                with open(db_path, "wb") as f:
                    for chunk in r.iter_content(chunk_size=8192):
                        f.write(chunk)

    conn = sqlite3.connect(db_path)
    df = pd.read_sql("SELECT * FROM health_data", conn)
    conn.close()

    # === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢ ===
    def parse_thai_date(text):
        try:
            if pd.isna(text) or str(text).strip() == "":
                return pd.NaT

            text = str(text).replace(".", "").strip()

            # ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏ä‡πà‡∏ô 13 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2564
            if " " in text and any(thai_month in text for thai_month in ["‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°"]):
                thai_months = {
                    "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°": "01", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå": "02", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°": "03", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô": "04",
                    "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°": "05", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô": "06", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°": "07", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°": "08",
                    "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô": "09", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°": "10", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô": "11", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°": "12"
                }
                parts = text.split()
                if len(parts) == 3:
                    day, month_th, year_th = parts
                    month = thai_months.get(month_th, "01")
                    year = int(year_th) - 543
                    return pd.to_datetime(f"{year}-{month}-{int(day):02}", errors="coerce")

            # ‡∏Å‡∏£‡∏ì‡∏µ 06/07/2565
            if "/" in text:
                day, month, year = text.split("/")
                year = int(year)
                if year > 2400:
                    year -= 543
                return pd.to_datetime(f"{year}-{int(month):02}-{int(day):02}", errors="coerce")

        except:
            return pd.NaT

        return pd.NaT

    # === ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ===
    df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à"] = df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à"].apply(parse_thai_date)

    df = df.fillna("").replace("nan", "")
    return df
